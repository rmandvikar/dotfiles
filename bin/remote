#!/bin/sh

#usage: remote
#           [(-l | --log)    [<branch>]]
#           [(-c | --commit) [<commit>]]
#           [(-t | --tree)   [<branch>]]
#           [(-d | --diff)   <commit1> [<commit2>]]
#           [--pr            [<pr>]]
#
# Browse to remote url or branch's log (commits) or branch's tree
# or a commit or diff between two commits.

GerritUrlQuery="$GerritUrl/#/q/"

while true; do
	case "$1" in
		-h ) print-file-comments "$0"; exit ;;
		-l | --log)
			option="log"
			shift
			remoteBranch="$1"
			if [[ -z "$remoteBranch" ]]; then
				remoteBranch=$(git remote-branch HEAD 2>/dev/null);
			fi
			break ;;
		-c | --commit)
			option="commit"
			shift
			commit=$(git rev-parse --verify ${1-HEAD} 2>/dev/null);
			if [[ -z "$commit" ]]; then
				echo 1>&2 "fatal: unknown commit $1"
				exit 1
			fi
			break ;;
		-t | --tree)
			option="tree"
			shift
			remoteBranch="$1"
			if [[ -z "$remoteBranch" ]]; then
				remoteBranch=$(git remote-branch HEAD 2>/dev/null);
			fi
			break ;;
		-d | --diff)
			option="diff"
			shift
			# get branch or hash for head
			head=$(git rev-parse --abbrev-ref HEAD)
			if [[ -z "$head" || "$head" == "HEAD" ]]; then
				head=$(git rev-parse $head)
			fi
			commit1="$1"
			commit1=$(sed -E 's/(HEAD|@)/'$head'/i' <<< "$commit1")
			if [[ -z "$commit1" ]]; then
				echo 1>&2 "fatal: unknown commit1 '$1'"
				exit 1
			fi
			if ! git cat-file -e "$commit1" 2>/dev/null; then
				echo 1>&2 "fatal: unknown commit1 '$1'"
				exit 1
			fi
			# get remote branch name if local branch
			if git branch-exists "$commit1"; then
				commit1=$(git remote-branch "$commit1")
			fi
			commit2="${2-HEAD}"
			commit2=$(sed -E 's/(HEAD|@)/'$head'/i' <<< "$commit2")
			if ! git cat-file -e "$commit2" 2>/dev/null; then
				echo 1>&2 "fatal: unknown commit2 '$2'"
				exit 1
			fi
			# get remote branch name if local branch
			if git branch-exists "$commit2"; then
				commit2=$(git remote-branch "$commit2")
			fi
			break ;;
		--pr)
			option="pr"
			shift
			pr="$1"
			break ;;
		* )
			if [ ! -z "$1" ]; then
				echo 1>&2 "fatal: unknown option $1"
				exit 1
			fi
			break ;;
	esac
done

if [[ "$option" == "log" ]]; then
	if [[ -z "$remoteBranch" ]]; then
		echo 1>&2 "fatal: remoteBranch required"
		exit 1
	fi
elif [[ "$option" == "commit" ]]; then
	if [[ -z "$commit" ]]; then
		echo 1>&2 "fatal: commit required"
		exit 1
	fi
elif [[ "$option" == "tree" ]]; then
	if [[ -z "$remoteBranch" ]]; then
		echo 1>&2 "fatal: remoteBranch required"
		exit 1
	fi
fi

git config --get-regex remote\..*\.url \
	| cut -d' ' -f2 \
	| \
		while read line;
		do
			if egrep -q '@'"$GerritUrl"':' <<< "$line"; then
				# gerrit
				sed -r '
					s,\.git$,,
					s,^ssh://.+@'"$GerritUrl"':[0-9]+/,,
					s,^,'"$GerritUrlQuery"'project:,
					' <<< "$line"
			elif egrep -q 'amazonaws.com' <<< "$line"; then
				# codecommit
				region=$(sed '
					s,^.*git-codecommit\.,,
					s,\.amazonaws\.com.*,,
					' <<< "$line")
				if [[ -z "$region" ]]; then
					echo 1>&2 "fatal: region required"
					exit 1
				fi
				if [[ "$option" == "log" ]]; then
					urlPart="commits/$remoteBranch"
				elif [[ "$option" == "commit" ]]; then
					urlPart="commit/$commit"
				elif [[ "$option" == "tree" ]]; then
					urlPart="browse/$remoteBranch/--/"
				fi
				sed '
					s,^.*/repos/,https://'"$region"'.console.aws.amazon.com/codecommit/home?region='"$region"'#/repository/,
					s,$,/,
					s,$,'"$urlPart"',
					' <<< "$line"
			else
				if egrep -q 'bitbucket.org' <<< "$line"; then
					# bitbucket
					if [[ "$option" == "log" ]]; then
						urlPart="/commits/branch/$remoteBranch"
					elif [[ "$option" == "commit" ]]; then
						urlPart="/commits/$commit"
					elif [[ "$option" == "tree" ]]; then
						urlPart="/src/$remoteBranch"
					elif [[ "$option" == "diff" ]]; then
						urlPart="/branches/compare/$commit2..$commit1#diff"
					elif [[ "$option" == "pr" ]]; then
						urlPart="/pull-requests/$pr"
					fi
				else
					# others: github, gitlab, etc.
					# add log, commit, tree specific url part
					if [[ "$option" == "log" ]]; then
						urlPart="/commits/$remoteBranch"
					elif [[ "$option" == "commit" ]]; then
						urlPart="/commit/$commit"
					elif [[ "$option" == "tree" ]]; then
						urlPart="/tree/$remoteBranch"
					elif [[ "$option" == "diff" ]]; then
						urlPart="/compare/$commit1...$commit2"
					elif [[ "$option" == "pr" ]]; then
						if [[ -z "$pr" ]]; then
							urlPart="/pulls"
						else
							urlPart="/pull/$pr"
						fi
					fi
				fi
				# avoid sed -r as -r is not available on mac
				sed '
					s,\.git$,,
					s,^git@,,
					s,^https://,,
					s,^ssh://,,
					# remove "user:password@" part
					s,^.*:.*@,,
					# remove "user@" part
					s,^.*@,,
					# add url part
					s,$,'"$urlPart"',
					' <<< "$line"
			fi
		done \
	| browse
