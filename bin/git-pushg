#!/bin/sh

#usage: git pushg [<branchFrom>] [<remote>]
#
# Create and/or push current branch to gerrit.

# default remote to that of master
remoteDefault=$(git config --get branch.master.remote)
remote="${2-"$remoteDefault"}"
# current branch name may not match remote branch
remotePath=$(git rev-parse --abbrev-ref @{u} 2>/dev/null)
if [ -z $remotePath ]; then \
	# branch from master as default
	branchFrom=${1-master}
	# remote branch name is same as local branch
	branch=$(git rev-parse --abbrev-ref @)
	remoteBranch="$branch"
	command=$(echo git push "$remote" "$branchFrom":"$remoteBranch")
	echo "$command"
	$command
	# track remote branch
	command=$(echo git branch -u "$remote"/"$remoteBranch")
	echo "$command"
	$command
else \
	branch=$(git rev-parse --abbrev-ref @)
	# get remote name for branch
	remote=$(git config --get branch."$branch".remote)
	remoteBranch=${remotePath#"$remote"/}
fi
command=$(echo git push "$remote" HEAD:refs/for/"$remoteBranch")
echo "$command"
$command
