#!/bin/sh

#usage:
#   nuget-package-version <package-name>
#           [(-l | --list)]
#
# Find nuget package version (case-insensitive) for given nuget
# package name.

while true; do
	case "$1" in
		-h | --help) print-file-comments "$0"; exit ;;
		-l | --list)
			option="list"
			shift
			break ;;
		* )
			break ;;
	esac
done

# grep for,
#	"<package>" for package references in csproj|packages.configs, and
#	"<package>, for project references in csproj
text=$(git grep -w -i \
	-e "\"$1\"" --or -e "\"$1," \
	--and --not -e "dll" \
	-- "*csproj" "*packages.config" | \
	# grep only lines containing [Vv]ersion
	grep -i "version")

result=$(sed -E \
	'
	# grep for version in " as
	#	[Vv]ersion="1.2.3.4"
	s_([^:]+).*version="([^"]+)".*_\1: \2_ i
	# grep for version NOT in " as
	#	Version=1.2.3.4
	s_([^:]+).*Version=([^,]+),.*_\1: \2_ i
	# remove last 0 from version as
	#	1.2.3.0
	s_(([0-9]+\.){2}[0-9]+)\.0_\1_
	' <<< "$text" | \
	sed '/^$/ d')

# list files
if [[ "$option" == "list" ]]; then
	echo "$result"
	exit
fi

# list versions only
sed -E \
	'
	# remove files names
	s,[^:]+: ,,
	' <<< "$result" | \
	sort -u | \
	sed '/^$/ d'
